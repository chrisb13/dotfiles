
#stolen from
#http://bazaar.launchpad.net/~sirver/ultisnips/trunk/view/head:/UltiSnips/python.snippets
# This file contains snippets that are always defined. I personally
# have snippets for signatures and often needed texts

##############
# NICE BOXES #
##############
global !p
import string, vim
def _parse_comments(s):
    i = iter(s.split(","))

    rv = []
    try:
        while True:
            n = i.next()
            if n[0] == 's':
                ctriple = []
                indent = ""
                if n[1] in string.digits:
                    indent = " " * int(n[1])
                ctriple.append(n.split(":",1)[1])
                n = i.next()
                assert(n[0] == 'm')
                ctriple.append(n.split(":",1)[1])
                n = i.next()
                assert(n[0] == 'e')
                ctriple.append(n.split(":",1)[1])
                ctriple.append(indent)
                rv.append(ctriple)
            elif n[0] == 'b':
                cm = n.split(":", 1)[1]
                if len(cm) == 1:
                    rv.insert(0, (cm,cm,cm, ""))
    except StopIteration:
       return rv

def make_box(twidth, bwidth = None):
   if bwidth is None:
      bwidth = twidth + 2
   b,m,e,i = _parse_comments(vim.eval("&comments"))[0]
   sline = b + m + bwidth*m + 2*m
   nspaces = (bwidth - twidth)//2 
   mlines = i + m + " " + " "*nspaces
   mlinee = " " + " "*(bwidth-twidth-nspaces) + m
   eline = i + 2*m + bwidth*m + m + e
   return sline, mlines, mlinee, eline
endglobal

snippet box "A nice box with the current comment symbol" b
`!p
box = make_box(len(t[1]))
snip.rv = box[0] + '\n' + box[1]
`${1:content}`!p
box = make_box(len(t[1]))
snip.rv = box[2] + '\n' + box[3]`
$0
endsnippet

snippet bbox "A nice box over the full width" b
`!p
box = make_box(len(t[1]), 71)
snip.rv = box[0] + '\n' + box[1]
`${1:content}`!p
box = make_box(len(t[1]), 71)
snip.rv = box[2] + '\n' + box[3]`
$0
endsnippet

##########################
# Custom Chris           #
##########################
snippet rsync
rsync -avz --progress z3457920@squall.ccrc.unsw.edu.au:/path/to/file/on/server/*.p ~/data_temp/coookie_cutters/
endsnippet

snippet ffmpeg
##qscale turns on VBR; see: http://www.kilobitspersecond.com/2007/05/24/ffmpeg-quality-comparison/
#-y is overwrite
#-an is no audio
#-r # where # is the frame rate

#assumes a number with 5 characters after 'movepar'
ffmpeg -r 15 -qscale 3 -y -an -i ./moviepar%05d.png outputfilename.mov
endsnippet

snippet pbs
#!/bin/bash
#PBS -l nodes=1
#PBS -l vmem=10gb
#PBS -l walltime=24:00:00
#PBS -M christopher.y.bull@student.unsw.edu.au
#PBS -m aeb

#chris' module list
module purge
module load python

cd $PBS_O_WORKDIR
source /srv/scratch/z3457920/katana_env_pbs/bin/activate
endsnippet

snippet ncicopyq 
#!/bin/bash
#PBS -P e14
#PBS -q copyq
#PBS -l wd
#PBS -l other=mdss 

#insert code here, e.g.
cd /g/data1/e14/cyb561/cb_tempa
mdss get -r cyb561/now/output/nemo_cordex24_ERAI01b ./
endsnippet


snippet ncinormalq
#!/bin/bash
#PBS -P e14
#PBS -q express
#PBS -l wd
#PBS -l ncpus=1,mem=20Gb,walltime=10:00:00 

#insert code here, e.g.
endsnippet

# vim:ft=snippets:

snippet figuredoc
\title{Figures}
\author{
        Christopher Bull \\
}
\date{\today}

\documentclass{scrartcl}

\usepackage{caption}  % Use for \captionof(*) command

% Set the page margins to accomodate space for captions and page numbers
\usepackage[left=0.9cm,right=0.9cm,bottom=1cm,footskip=1em,includefoot]{geometry}
% Use for 'landscape' environment to position landscape captions properly
\usepackage{pdflscape}

% Setup the new 'pagecommand*' option key-value
\usepackage{etoolbox}
\usepackage{pdfpages}
\makeatletter
\newcommand*{\AM@pagecommandstar}{}
\define@key{pdfpages}{pagecommand*}{\def\AM@pagecommandstar{#1}}
\patchcmd{\AM@output}{\begingroup\AM@pagecommand\endgroup}
{\ifthenelse{\boolean{AM@firstpage}}{\begingroup\AM@pagecommandstar\endgroup}{\begingroup\AM@pagecommand\endgroup}}{}{} % Patch to use new option
\patchcmd{\AM@split@optionsii}{\equal{pagecommand}{\AM@temp}\or}
{\equal{pagecommand}{\AM@temp}\or\equal{pagecommand*}{\AM@temp}\or}{}{}
\makeatother

\begin{document}
\maketitle

\begin{abstract}
These are the figures for the EAC paper\ldots
\end{abstract}

\section{Figure}
This is time for all good men to come to the aid of their party!

% Include a single PDF page
\includepdf[
    frame,
    scale=0.90,
    % Use new 'pagecommand*' to set caption on the first page, include page #
   pagecommand*={\thispagestyle{plain}\null\vfill\captionof{figure}{This is the FIRST caption}}
]{./expt_lc_fwdeasternboundary01conditional_networkx_fig8.pdf}

%% Include a pdf-document with several pages
%\begin{landscape} % Be sure to wrap in 'landscape' environment
%\includepdf[
    %pages=-,                
    %nup=1x2,                
    %frame,                  
    %landscape,          
    %delta=5mm 5mm,  
    %scale=0.90,
    %% Set the caption on the first page of output
    %pagecommand*={\thispagestyle{plain}\null\vfill\captionof{figure}{This is the SECOND caption}},
    %% Set the [continued] caption on second and subsequent pages
    %% Use '\captionof*{...} to avoid duplicate entries in listoffigures
    %pagecommand={\thispagestyle{plain}\null\vfill\captionof*{figure}{\figurename~\thefigure: This is the SECOND caption (Continued)}}
%]{./expt_lc_fwdeasternboundary01conditional_networkx_fig8.pdf}
%\end{landscape}

\end{document}
endsnippet 
